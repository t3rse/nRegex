@using System.Collections

@model nRegex.Models.RegexMatchDataModel
<table style="width:100%;">
  <tr>
    <td style="border:1px solid navy;padding:15px;vertical-align:top;">
      @{
        string target = this.Model.OriginalTarget;
        SortedList sl = this.Model.MatchSortedList;
        for (int i = sl.Count - 1; i > -1; i--)
        {
          int startPos = (int)sl.GetKey(i);
          int matchLength = sl[sl.GetKey(i)].ToString().Length;
          target = target.Insert(startPos + matchLength, "</a>");
          target = target.Insert(startPos, "<a id='m" + startPos + "' name='m" + startPos + "'  class='match'>");
        }
      }
      @Html.Raw(target)
    </td>
    <td style="width:30%;border:1px solid navy;padding:15px;vertical-align:top;">
      <div class="matchAccordion">
        @{
          int vCount = 0; 
        }
        @foreach (var m in this.Model.Matches)
        {
          <h3 style="font-size:8pt;font-weight:bold;">Match @(++vCount)</h3>
          <div>

                  <div style="border:1px solid #CCC;">                    
                    @foreach (var g in m.GroupResults)
                    {
                      <ul class="groupResultList">
                          <li style="font-size:8pt;">
                            <span class="groupResultLabelSpan">Group Name:</span> <span class="groupResultValueSpan">@g.MatchGroupName</span></li>
                          <li style="font-size:8pt;">
                            <span class="groupResultLabelSpan">Index: </span><span class='groupResultValueSpan'>@g.Index</span></li>
                          <li style="font-size:8pt;">
                            <span class="groupResultLabelSpan">Text:</span><span class='groupResultValueSpan'>@g.MatchText</span></li>
                      </ul>
                    }
                  </div>
          </div>          
        }        
      </div>    
    </td>
  </tr>
</table>